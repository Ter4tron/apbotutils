library(devtools)
use_r()
use_r("z_score")
x <- c(1,2,3,4,5,77, 8,9)
avg <- mean(x)
sd <- sd(x)
z <- (x-avg)/sd
z
?mean
use_mit_license()
check()
check()
library(apbotutils)
z.score("c")
z.score(1,2,3,4,55,6,7,8,9,12,12,12)
z.score(c(1,2,3,4,55,6,7,8,9,12,12,12))
*z.score
?z.score
exists(c)
exists("c")
c
exists("waldo")
waldo <- 1
if(exists(waldo)) print(waldo)
if(exists("waldo")) print(waldo)
library(phenopix)
trainOCR
?rasterImage
library(devtools)
use_r()
use_r("avg.tbl")
d <- data.frame(c = c(1,2,3), d = c(2,4,6))
d
z <- expr(d$c + d$d)
library(rlang)
z <- expr(d$c + d$d)
eval(z)
expr(d %>% mutate(e = c(3,6,9)))
eval(expr(d %>% mutate(e = c(3,6,9))))
eval(expr(d %>% dplyr::mutate(e = c(3,6,9))))
expr(cat("a", "%>%", "b"))
r <- (cat("a", "%>%", "b"))
exp(r)
expr(r)
use_r()
use_r("cement")
use_package("rlang")
?ensyms
use_package("purrr")
load_all()
cement(foo, bar, baz)
z <- expr("x+y")
z
z <- expr(x+y)
enexpr(z)
?cement
?cement
expr
pipe <- sym("%>%")
pipe
expr(a !!pipe b)
enexpr(a !!pipe b)
cement(%>%)
cement(pipe)
cement(!!pipe)
cement(a, !!pipe, b)
cem1 <- cement(a, !!pipe, b)
cement(a, %>%, !!cem1)
exprs(a, pipe, b)
cement(exprs(a, pipe, b))
d
library(dplyr)
eval(expr(d$c, !!pipe, d$d))
?eval
?expr
expr(cement(a, !!pipe, b))
?call2
parse(cement(a, !!pipe, b))
cement(a, !!pipe, b)
q <- cement(a, !!pipe, b)
parse(q)
parse("a+b+c")
enexpr("a+b+c")
ensym("a+b+c")
typeof(ensym("a+b+c"))
ensyms("a+b+c")
ensym(x)
ensym("x")
x <- 3
ensym("x")
ensym(x)
ensym("bepis")
?ensym
sym("x")
sym("bepis")
sym("a+b+c")
parse_expr("y = 1+2+3")
parse_expr(" a%>%b")
load_all()
load_all()
avg,tbl(beh, meh, feh)
load_all()
avg,tbl(beh, meh, feh)
avg.tbl(beh, meh, feh)
avg.tbl("beh", "meh", "feh")
qw <- avg.tbl("beh", "meh", "feh")
cat(wq, sep = "%>%")
cat(qw, sep = "%>%")
paste(qw, sep = "%>%")
paste(qw, sep = "")
?paste
a <- "b"
cat("a", "b", "c")
cat("a", "%>%", "c")
bzk <- cat("a", "%>%", "c")
expr(!!bzk)
enexpr(bzk)
bzk
bzk <- cat("a", "%>%", "c")
bzk
bzk <- paste("a", "%>%", "c")
bzk
enexpr(bzk)
parse_expr(bzk)
l <- list("beh", "feh", "meh")
l
paste(l)
paste(l, collapse = FALSE)
paste(l, collapse = "")
paste(l, collapse = "%>%")
paste(l, collapse = " %>% \n")
paste(l, collapse = " %>% ")
paste("c", 1)
d
which(d == c)
which(colnames(d) == c)
colnames(d)
which(colnames(d) == "c")
load_all
load_all()
data <- read.table("C:/Users/davidl/OneDrive/Dokumenti/Hrast/VP.csv")
data
data <- read.table("C:/Users/davidl/OneDrive/Dokumenti/Hrast/VP.csv", header = T, sep = ",")
data
avg.tbl(data, leaf, WP)
avg.tbl(data, "leaf", "WP")
avg.tbl
bep <- avg.tbl(data, "leaf", "WP")
bep
load_all()
avg.tbl(data, "leaf", "WP")
load_all()
avg.tbl(data, "leaf", "WP")
load_all()
avg.tbl(data, "leaf", "WP")
load_all()
avg.tbl(data, "leaf", "WP")
?substitute
?sub
?str_sub
f <- "abc"
nchar(bep)
nchar(avg.tbl(data, "leaf", "WP"))
load_all()
avg.tbl(data, "leaf", "WP")
load_all()
avg.tbl(data, "leaf", "WP")
load_all()
avg.tbl(data, "leaf", "WP")
load_all()
avg.tbl(data, "leaf", "WP")
call2(avg.tbl(data, "leaf", "WP"))
do.call(avg.tbl(data, "leaf", "WP"))
eval(avg.tbl(data, "leaf", "WP"))
load_all()
eval(avg.tbl(data, "leaf", "WP"))
library(dplyr)
eval(avg.tbl(data, "leaf", "WP"))
evalavg.tbl(data, "leaf", "WP")
res <- avg.tbl(data, "leaf", "WP")
res
typeof(res)
class(res)
is.expression(res)
load_all()
res <- avg.tbl(data, "leaf", "WP")
res
?parse_expr
is.expr(expr(a))
load_all()
library(devtools)
load_all()
data = read.table("C:/Users/davidl/OneDrive/Dokumenti/Hrast/VP.csv")
data
data = read.table("C:/Users/davidl/OneDrive/Dokumenti/Hrast/VP.csv", header = TRUE, sep = ",")
data
avg.tbl(data, leaf, WP)
avg.tbl(data, "leaf", "WP")
library(rlang)
avg.tbl(data, "leaf", "WP")
load_all()
avg.tbl(data, "leaf", "WP")
d <- avg.tbl(data, "leaf", "WP")
eval(d)
parent.frame()
expr(data$bepis <- c(1:length(data$WP)))
e <- expr(data$bepis <- c(1:length(data$WP)))
eval(e)
data
df <- data
group = "leaf"
columns = "WP"
pipe <- " %>% "
i = "WP"
code.avg <- paste(df, "$", columns, ".avg = ", "mean(", columns, ")")
code.avg
df
coumns
columns
df.name="data"
code.avg <- paste(df.name, "$", columns, ".avg = ", "mean(", columns, ")")
code.avg
code.avg <- paste(df.name, "$", columns, ".avg = ", "mean(", columns, ")", sep = "")
code.avg
eval(code.avg)
r <- parse_expr(code.avg)
eval(r)
code.avg
code.avg <- paste(df.name, "$", columns, ".avg = ", "mean(", df.name, "$", columns, ")", sep = "")
code.avg
r <- parse_expr(code.avg)
eval(r)
data
factorised.expr <- parse_expr(paste(df.name,"$", group, " <- factor(", df.name,"$", group, ")"))
factorised.expr
eval(factorised.expr)
data
group_by(data, leaf)
dplyr::group_by(data, leaf)
grouped <- eval(parse_expr(paste("dplyr::group_by(", df.name, group, ")")))
grouped <- eval(parse_expr(paste("dplyr::group_by(", df.name, ",", group, ")")))
grouped
summarised <- paste("dplyr::summarise(", df.name, ",", "sample.size = n(),")
summarised
summarised <- paste("dplyr::summarise(", df.name, ",", "sample.size = n(),", sep = "")
summarised
summarised <- paste(summarised, i, ".avg = mean(", i, ")", sep = "", ",")
summarised
summarised <- paste(summarised, i, ".avg = mean(", i, ")", ",",
i, ".sd = sd(", i, ")", ",", sep = "")
summarised
for(i in columns){
summarised <- paste(summarised, i, ".avg = mean(", i, ")", ",",
i, ".sd = sd(", i, ")", ",", sep = "")
}
summarised
summarised.cut <- substr(summarised, 1, length(summarised)-1)
summarised.cut
length(summarised)
summarised.cut <- substr(summarised, 1, nchar(summarised)-1)
summarised.cut
summarised.final <- eval(parse_expr(paste(summarised.cut, ")"))
return(expression)
}
summarised.final <- eval(parse_expr(paste(summarised.cut, ")")))
?n
summarised <- paste("dplyr::summarise(", df.name, ",", "sample.size = dplyr::n(),", sep = "")
for(i in columns){
summarised <- paste(summarised, i, ".avg = mean(", i, ")", ",",
i, ".sd = sd(", i, ")", ",", sep = "")
}
summarised.cut <- substr(summarised, 1, nchar(summarised)-1)
summarised.final <- eval(parse_expr(paste(summarised.cut, ")")))
summarised.final
mutated <- paste("dplyr::mutate(", df.name, ",", sep = "")
mutated
mutated <- paste(mutated, columns, ".se = ", "(", columns, ".sd)", "/(sqrt(sample.size - 1))", sep = "")
mutated
mutated <- paste(mutated, columns, ".se = ", "(", columns, ".sd)", "/(sqrt(sample.size - 1))", ",",sep = "")
for(i in columns){
mutated <- paste(mutated, columns, ".se = ", "(", columns, ".sd)", "/(sqrt(sample.size - 1))", ",",sep = "")
}
mutated
mutated.cut <- substr(mutated, 1, nchar(mutated)-1)
mutated.final <- eval(parse_expr(paste(mutated.cut, ")")))
mutated.cut
grouped <- eval(parse_expr(paste("dplyr::group_by(", df.name, ",", group, ")")))
summarised <- paste("dplyr::summarise(", df.name, ",", "sample.size = dplyr::n(),", sep = "")
for(i in columns){
summarised <- paste(summarised, i, ".avg = mean(", i, ")", ",",
i, ".sd = sd(", i, ")", ",", sep = "")
}
summarised.cut <- substr(summarised, 1, nchar(summarised)-1)
summarised.final <- eval(parse_expr(paste(summarised.cut, ")")))
mutated <- paste("dplyr::mutate(", df.name, ",", sep = "")
for(i in columns){
mutated <- paste(mutated, columns, ".se = ", "(", columns, ".sd)", "/(sqrt(sample.size - 1))", ",",sep = "")
}
mutated.cut <- substr(mutated, 1, nchar(mutated)-1)
mutated.final <- eval(parse_expr(paste(mutated.cut, ")")))
mutated.cut
paste(mutated.cut, ")")
mutated.final <- eval(parse_expr(paste(mutated.cut, ")", sep = "")))
data
grouped <- eval(parse_expr(paste("dplyr::group_by(", df.name, ",", group, ")")))
summarised <- paste("dplyr::summarise(", df.name, ",", "sample.size = dplyr::n(),", sep = "")
for(i in columns){
summarised <- paste(summarised, i, ".avg = mean(", i, ")", ",",
i, ".sd = sd(", i, ")", ",", sep = "")
}
grouped <- eval(parse_expr(paste("dplyr::group_by(", df.name, ",", group, ")")))
summarised <- paste("dplyr::summarise(", df.name, ",", "sample.size = dplyr::n(),", sep = "")
for(i in columns){
summarised <- paste(summarised, i, ".avg = mean(", i, ")", ",",
i, ".sd = sd(", i, ")", ",", sep = "")
}
summarised.cut <- substr(summarised, 1, nchar(summarised)-1)
summarised.final <- eval(parse_expr(paste(summarised.cut, ")")))
data
data <- read.table("C:/Users/davidl/OneDrive/Dokumenti/Hrast/VP.csv", header = T, sep = ",")
grouped <- eval(parse_expr(paste("dplyr::group_by(", df.name, ",", group, ")")))
summarised <- paste("dplyr::summarise(", "grouped", ",", "sample.size = dplyr::n(),", sep = "")
for(i in columns){
summarised <- paste(summarised, i, ".avg = mean(", i, ")", ",",
i, ".sd = sd(", i, ")", ",", sep = "")
}
summarised.cut <- substr(summarised, 1, nchar(summarised)-1)
summarised.final <- eval(parse_expr(paste(summarised.cut, ")")))
summarised.final
mutated <- paste("dplyr::mutate(", "summarised.final)", ",", sep = "")
for(i in columns){
mutated <- paste(mutated, columns, ".se = ", "(", columns, ".sd)", "/(sqrt(sample.size - 1))", ",",sep = "")
}
mutated.cut <- substr(mutated, 1, nchar(mutated)-1)
mutated.final <- eval(parse_expr(paste(mutated.cut, ")", sep = "")))
mutated.cut
mutated <- paste("dplyr::mutate(", "summarised.final", ",", sep = "")
for(i in columns){
mutated <- paste(mutated, columns, ".se = ", "(", columns, ".sd)", "/(sqrt(sample.size - 1))", ",",sep = "")
}
mutated.cut <- substr(mutated, 1, nchar(mutated)-1)
mutated.final <- eval(parse_expr(paste(mutated.cut, ")", sep = "")))
mutated.final
use_package("dplyr")
check()
use_package("rlang")
?as_string
check()
library(apbotutils)
library(apbotutils)
data
grouped <- paste("dplyr::group_by(", df.name, ",", sep = "")
for(i in group){
grouped <- paste(grouped, i, ",", sep = "")
grouped.cut <- substr(grouped, 1, nchar(grouped)-1)
grouped.final <- eval(rlang::parse_expr(paste(grouped.cut, ")")))
}
summarised <- paste("dplyr::summarise(", "grouped.final", ",", "sample.size = dplyr::n(),", sep = "")
for(i in columns){
summarised <- paste(summarised, i, ".avg = mean(", i, ")", ",",
i, ".sd = sd(", i, ")", ",", sep = "")
}
summarised.cut <- substr(summarised, 1, nchar(summarised)-1)
summarised.final <- eval(rlang::parse_expr(paste(summarised.cut, ")")))
mutated <- paste("dplyr::mutate(", "summarised.final", ",", sep = "")
for(i in columns){
mutated <- paste(mutated, columns, ".se = ", "(", columns, ".sd)", "/(sqrt(sample.size - 1))", ",",sep = "")
}
mutated.cut <- substr(mutated, 1, nchar(mutated)-1)
mutated.final <- eval(rlang::parse_expr(paste(mutated.cut, ")", sep = "")))
return(mutated.final)
mutated.final
library(apbotutils)
library(apbotutils)
load("C:/Users/davidl/Downloads/data.lonec.julij.RData")
data.lonec.julij
df.name = "data.lonec.julij"
group = c("obravnava", "obdobje")
group
columns = c("Photo", "Cond")
grouped <- paste("dplyr::group_by(", df.name, ",", sep = "")
for(i in group){
grouped <- paste(grouped, i, ",", sep = "")
grouped.cut <- substr(grouped, 1, nchar(grouped)-1)
grouped.final <- eval(rlang::parse_expr(paste(grouped.cut, ")")))
}
grouped.final
summarised <- paste("dplyr::summarise(", "grouped.final", ",", "sample.size = dplyr::n(),", sep = "")
for(i in columns){
summarised <- paste(summarised, i, ".avg = mean(", i, ")", ",",
i, ".sd = sd(", i, ")", ",", sep = "")
}
summarised.cut <- substr(summarised, 1, nchar(summarised)-1)
summarised.final <- eval(rlang::parse_expr(paste(summarised.cut, ")")))
mutated <- paste("dplyr::mutate(", "summarised.final", ",", sep = "")
for(i in columns){
mutated <- paste(mutated, columns, ".se = ", "(", columns, ".sd)", "/(sqrt(sample.size - 1))", ",",sep = "")
}
mutated.cut <- substr(mutated, 1, nchar(mutated)-1)
mutated.final <- eval(rlang::parse_expr(paste(mutated.cut, ")", sep = "")))
mutated.cut
mutated <- paste("dplyr::mutate(", "summarised.final", ",", sep = "")
for(i in columns){
mutated <- paste(mutated, i, ".se = ", "(", columns, ".sd)", "/(sqrt(sample.size - 1))", ",",sep = "")
}
mutated.cut <- substr(mutated, 1, nchar(mutated)-1)
mutated.final <- eval(rlang::parse_expr(paste(mutated.cut, ")", sep = "")))
mutated <- paste("dplyr::mutate(", "summarised.final", ",", sep = "")
for(i in columns){
mutated <- paste(mutated, i, ".se = ", "(", i, ".sd)", "/(sqrt(sample.size - 1))", ",",sep = "")
}
mutated.cut <- substr(mutated, 1, nchar(mutated)-1)
mutated.final <- eval(rlang::parse_expr(paste(mutated.cut, ")", sep = "")))
mutated.final
grouped.final
grouped <- paste("dplyr::group_by(", df.name, ",", sep = "")
for(i in group){
grouped <- paste(grouped, i, ",", sep = "")
grouped.cut <- substr(grouped, 1, nchar(grouped)-1)
grouped.final <- eval(rlang::parse_expr(paste(grouped.cut, ")")))
}
summarised <- paste("dplyr::summarise(", "grouped.final", ",", "sample.size = dplyr::n(),", sep = "")
for(i in columns){
summarised <- paste(summarised, i, ".avg = mean(", i, ", na.rm = T)", ",",
i, ".sd = sd(", i, ", na.rm = T)", ",", sep = "")
}
summarised.cut <- substr(summarised, 1, nchar(summarised)-1)
summarised.final <- eval(rlang::parse_expr(paste(summarised.cut, ")")))
mutated <- paste("dplyr::mutate(", "summarised.final", ",", sep = "")
for(i in columns){
mutated <- paste(mutated, i, ".se = ", "(", i, ".sd)", "/(sqrt(sample.size - 1))", ",",sep = "")
}
mutated.cut <- substr(mutated, 1, nchar(mutated)-1)
mutated.final <- eval(rlang::parse_expr(paste(mutated.cut, ")", sep = "")))
mutated.final
library(apbotutils)
library("devtools")
use_data("Constants")
