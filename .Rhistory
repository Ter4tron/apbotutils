cem1 <- cement(a, !!pipe, b)
cement(a, %>%, !!cem1)
exprs(a, pipe, b)
cement(exprs(a, pipe, b))
d
library(dplyr)
eval(expr(d$c, !!pipe, d$d))
?eval
?expr
expr(cement(a, !!pipe, b))
?call2
parse(cement(a, !!pipe, b))
cement(a, !!pipe, b)
q <- cement(a, !!pipe, b)
parse(q)
parse("a+b+c")
enexpr("a+b+c")
ensym("a+b+c")
typeof(ensym("a+b+c"))
ensyms("a+b+c")
ensym(x)
ensym("x")
x <- 3
ensym("x")
ensym(x)
ensym("bepis")
?ensym
sym("x")
sym("bepis")
sym("a+b+c")
parse_expr("y = 1+2+3")
parse_expr(" a%>%b")
load_all()
load_all()
avg,tbl(beh, meh, feh)
load_all()
avg,tbl(beh, meh, feh)
avg.tbl(beh, meh, feh)
avg.tbl("beh", "meh", "feh")
qw <- avg.tbl("beh", "meh", "feh")
cat(wq, sep = "%>%")
cat(qw, sep = "%>%")
paste(qw, sep = "%>%")
paste(qw, sep = "")
?paste
a <- "b"
cat("a", "b", "c")
cat("a", "%>%", "c")
bzk <- cat("a", "%>%", "c")
expr(!!bzk)
enexpr(bzk)
bzk
bzk <- cat("a", "%>%", "c")
bzk
bzk <- paste("a", "%>%", "c")
bzk
enexpr(bzk)
parse_expr(bzk)
l <- list("beh", "feh", "meh")
l
paste(l)
paste(l, collapse = FALSE)
paste(l, collapse = "")
paste(l, collapse = "%>%")
paste(l, collapse = " %>% \n")
paste(l, collapse = " %>% ")
paste("c", 1)
d
which(d == c)
which(colnames(d) == c)
colnames(d)
which(colnames(d) == "c")
load_all
load_all()
data <- read.table("C:/Users/davidl/OneDrive/Dokumenti/Hrast/VP.csv")
data
data <- read.table("C:/Users/davidl/OneDrive/Dokumenti/Hrast/VP.csv", header = T, sep = ",")
data
avg.tbl(data, leaf, WP)
avg.tbl(data, "leaf", "WP")
avg.tbl
bep <- avg.tbl(data, "leaf", "WP")
bep
load_all()
avg.tbl(data, "leaf", "WP")
load_all()
avg.tbl(data, "leaf", "WP")
load_all()
avg.tbl(data, "leaf", "WP")
load_all()
avg.tbl(data, "leaf", "WP")
?substitute
?sub
?str_sub
f <- "abc"
nchar(bep)
nchar(avg.tbl(data, "leaf", "WP"))
load_all()
avg.tbl(data, "leaf", "WP")
load_all()
avg.tbl(data, "leaf", "WP")
load_all()
avg.tbl(data, "leaf", "WP")
load_all()
avg.tbl(data, "leaf", "WP")
call2(avg.tbl(data, "leaf", "WP"))
do.call(avg.tbl(data, "leaf", "WP"))
eval(avg.tbl(data, "leaf", "WP"))
load_all()
eval(avg.tbl(data, "leaf", "WP"))
library(dplyr)
eval(avg.tbl(data, "leaf", "WP"))
evalavg.tbl(data, "leaf", "WP")
res <- avg.tbl(data, "leaf", "WP")
res
typeof(res)
class(res)
is.expression(res)
load_all()
res <- avg.tbl(data, "leaf", "WP")
res
?parse_expr
is.expr(expr(a))
load_all()
library(devtools)
load_all()
data = read.table("C:/Users/davidl/OneDrive/Dokumenti/Hrast/VP.csv")
data
data = read.table("C:/Users/davidl/OneDrive/Dokumenti/Hrast/VP.csv", header = TRUE, sep = ",")
data
avg.tbl(data, leaf, WP)
avg.tbl(data, "leaf", "WP")
library(rlang)
avg.tbl(data, "leaf", "WP")
load_all()
avg.tbl(data, "leaf", "WP")
d <- avg.tbl(data, "leaf", "WP")
eval(d)
parent.frame()
expr(data$bepis <- c(1:length(data$WP)))
e <- expr(data$bepis <- c(1:length(data$WP)))
eval(e)
data
df <- data
group = "leaf"
columns = "WP"
pipe <- " %>% "
i = "WP"
code.avg <- paste(df, "$", columns, ".avg = ", "mean(", columns, ")")
code.avg
df
coumns
columns
df.name="data"
code.avg <- paste(df.name, "$", columns, ".avg = ", "mean(", columns, ")")
code.avg
code.avg <- paste(df.name, "$", columns, ".avg = ", "mean(", columns, ")", sep = "")
code.avg
eval(code.avg)
r <- parse_expr(code.avg)
eval(r)
code.avg
code.avg <- paste(df.name, "$", columns, ".avg = ", "mean(", df.name, "$", columns, ")", sep = "")
code.avg
r <- parse_expr(code.avg)
eval(r)
data
factorised.expr <- parse_expr(paste(df.name,"$", group, " <- factor(", df.name,"$", group, ")"))
factorised.expr
eval(factorised.expr)
data
group_by(data, leaf)
dplyr::group_by(data, leaf)
grouped <- eval(parse_expr(paste("dplyr::group_by(", df.name, group, ")")))
grouped <- eval(parse_expr(paste("dplyr::group_by(", df.name, ",", group, ")")))
grouped
summarised <- paste("dplyr::summarise(", df.name, ",", "sample.size = n(),")
summarised
summarised <- paste("dplyr::summarise(", df.name, ",", "sample.size = n(),", sep = "")
summarised
summarised <- paste(summarised, i, ".avg = mean(", i, ")", sep = "", ",")
summarised
summarised <- paste(summarised, i, ".avg = mean(", i, ")", ",",
i, ".sd = sd(", i, ")", ",", sep = "")
summarised
for(i in columns){
summarised <- paste(summarised, i, ".avg = mean(", i, ")", ",",
i, ".sd = sd(", i, ")", ",", sep = "")
}
summarised
summarised.cut <- substr(summarised, 1, length(summarised)-1)
summarised.cut
length(summarised)
summarised.cut <- substr(summarised, 1, nchar(summarised)-1)
summarised.cut
summarised.final <- eval(parse_expr(paste(summarised.cut, ")"))
return(expression)
}
summarised.final <- eval(parse_expr(paste(summarised.cut, ")")))
?n
summarised <- paste("dplyr::summarise(", df.name, ",", "sample.size = dplyr::n(),", sep = "")
for(i in columns){
summarised <- paste(summarised, i, ".avg = mean(", i, ")", ",",
i, ".sd = sd(", i, ")", ",", sep = "")
}
summarised.cut <- substr(summarised, 1, nchar(summarised)-1)
summarised.final <- eval(parse_expr(paste(summarised.cut, ")")))
summarised.final
mutated <- paste("dplyr::mutate(", df.name, ",", sep = "")
mutated
mutated <- paste(mutated, columns, ".se = ", "(", columns, ".sd)", "/(sqrt(sample.size - 1))", sep = "")
mutated
mutated <- paste(mutated, columns, ".se = ", "(", columns, ".sd)", "/(sqrt(sample.size - 1))", ",",sep = "")
for(i in columns){
mutated <- paste(mutated, columns, ".se = ", "(", columns, ".sd)", "/(sqrt(sample.size - 1))", ",",sep = "")
}
mutated
mutated.cut <- substr(mutated, 1, nchar(mutated)-1)
mutated.final <- eval(parse_expr(paste(mutated.cut, ")")))
mutated.cut
grouped <- eval(parse_expr(paste("dplyr::group_by(", df.name, ",", group, ")")))
summarised <- paste("dplyr::summarise(", df.name, ",", "sample.size = dplyr::n(),", sep = "")
for(i in columns){
summarised <- paste(summarised, i, ".avg = mean(", i, ")", ",",
i, ".sd = sd(", i, ")", ",", sep = "")
}
summarised.cut <- substr(summarised, 1, nchar(summarised)-1)
summarised.final <- eval(parse_expr(paste(summarised.cut, ")")))
mutated <- paste("dplyr::mutate(", df.name, ",", sep = "")
for(i in columns){
mutated <- paste(mutated, columns, ".se = ", "(", columns, ".sd)", "/(sqrt(sample.size - 1))", ",",sep = "")
}
mutated.cut <- substr(mutated, 1, nchar(mutated)-1)
mutated.final <- eval(parse_expr(paste(mutated.cut, ")")))
mutated.cut
paste(mutated.cut, ")")
mutated.final <- eval(parse_expr(paste(mutated.cut, ")", sep = "")))
data
grouped <- eval(parse_expr(paste("dplyr::group_by(", df.name, ",", group, ")")))
summarised <- paste("dplyr::summarise(", df.name, ",", "sample.size = dplyr::n(),", sep = "")
for(i in columns){
summarised <- paste(summarised, i, ".avg = mean(", i, ")", ",",
i, ".sd = sd(", i, ")", ",", sep = "")
}
grouped <- eval(parse_expr(paste("dplyr::group_by(", df.name, ",", group, ")")))
summarised <- paste("dplyr::summarise(", df.name, ",", "sample.size = dplyr::n(),", sep = "")
for(i in columns){
summarised <- paste(summarised, i, ".avg = mean(", i, ")", ",",
i, ".sd = sd(", i, ")", ",", sep = "")
}
summarised.cut <- substr(summarised, 1, nchar(summarised)-1)
summarised.final <- eval(parse_expr(paste(summarised.cut, ")")))
data
data <- read.table("C:/Users/davidl/OneDrive/Dokumenti/Hrast/VP.csv", header = T, sep = ",")
grouped <- eval(parse_expr(paste("dplyr::group_by(", df.name, ",", group, ")")))
summarised <- paste("dplyr::summarise(", "grouped", ",", "sample.size = dplyr::n(),", sep = "")
for(i in columns){
summarised <- paste(summarised, i, ".avg = mean(", i, ")", ",",
i, ".sd = sd(", i, ")", ",", sep = "")
}
summarised.cut <- substr(summarised, 1, nchar(summarised)-1)
summarised.final <- eval(parse_expr(paste(summarised.cut, ")")))
summarised.final
mutated <- paste("dplyr::mutate(", "summarised.final)", ",", sep = "")
for(i in columns){
mutated <- paste(mutated, columns, ".se = ", "(", columns, ".sd)", "/(sqrt(sample.size - 1))", ",",sep = "")
}
mutated.cut <- substr(mutated, 1, nchar(mutated)-1)
mutated.final <- eval(parse_expr(paste(mutated.cut, ")", sep = "")))
mutated.cut
mutated <- paste("dplyr::mutate(", "summarised.final", ",", sep = "")
for(i in columns){
mutated <- paste(mutated, columns, ".se = ", "(", columns, ".sd)", "/(sqrt(sample.size - 1))", ",",sep = "")
}
mutated.cut <- substr(mutated, 1, nchar(mutated)-1)
mutated.final <- eval(parse_expr(paste(mutated.cut, ")", sep = "")))
mutated.final
use_package("dplyr")
check()
use_package("rlang")
?as_string
check()
library(apbotutils)
library(apbotutils)
data
grouped <- paste("dplyr::group_by(", df.name, ",", sep = "")
for(i in group){
grouped <- paste(grouped, i, ",", sep = "")
grouped.cut <- substr(grouped, 1, nchar(grouped)-1)
grouped.final <- eval(rlang::parse_expr(paste(grouped.cut, ")")))
}
summarised <- paste("dplyr::summarise(", "grouped.final", ",", "sample.size = dplyr::n(),", sep = "")
for(i in columns){
summarised <- paste(summarised, i, ".avg = mean(", i, ")", ",",
i, ".sd = sd(", i, ")", ",", sep = "")
}
summarised.cut <- substr(summarised, 1, nchar(summarised)-1)
summarised.final <- eval(rlang::parse_expr(paste(summarised.cut, ")")))
mutated <- paste("dplyr::mutate(", "summarised.final", ",", sep = "")
for(i in columns){
mutated <- paste(mutated, columns, ".se = ", "(", columns, ".sd)", "/(sqrt(sample.size - 1))", ",",sep = "")
}
mutated.cut <- substr(mutated, 1, nchar(mutated)-1)
mutated.final <- eval(rlang::parse_expr(paste(mutated.cut, ")", sep = "")))
return(mutated.final)
mutated.final
library(apbotutils)
library(apbotutils)
load("C:/Users/davidl/Downloads/data.lonec.julij.RData")
data.lonec.julij
df.name = "data.lonec.julij"
group = c("obravnava", "obdobje")
group
columns = c("Photo", "Cond")
grouped <- paste("dplyr::group_by(", df.name, ",", sep = "")
for(i in group){
grouped <- paste(grouped, i, ",", sep = "")
grouped.cut <- substr(grouped, 1, nchar(grouped)-1)
grouped.final <- eval(rlang::parse_expr(paste(grouped.cut, ")")))
}
grouped.final
summarised <- paste("dplyr::summarise(", "grouped.final", ",", "sample.size = dplyr::n(),", sep = "")
for(i in columns){
summarised <- paste(summarised, i, ".avg = mean(", i, ")", ",",
i, ".sd = sd(", i, ")", ",", sep = "")
}
summarised.cut <- substr(summarised, 1, nchar(summarised)-1)
summarised.final <- eval(rlang::parse_expr(paste(summarised.cut, ")")))
mutated <- paste("dplyr::mutate(", "summarised.final", ",", sep = "")
for(i in columns){
mutated <- paste(mutated, columns, ".se = ", "(", columns, ".sd)", "/(sqrt(sample.size - 1))", ",",sep = "")
}
mutated.cut <- substr(mutated, 1, nchar(mutated)-1)
mutated.final <- eval(rlang::parse_expr(paste(mutated.cut, ")", sep = "")))
mutated.cut
mutated <- paste("dplyr::mutate(", "summarised.final", ",", sep = "")
for(i in columns){
mutated <- paste(mutated, i, ".se = ", "(", columns, ".sd)", "/(sqrt(sample.size - 1))", ",",sep = "")
}
mutated.cut <- substr(mutated, 1, nchar(mutated)-1)
mutated.final <- eval(rlang::parse_expr(paste(mutated.cut, ")", sep = "")))
mutated <- paste("dplyr::mutate(", "summarised.final", ",", sep = "")
for(i in columns){
mutated <- paste(mutated, i, ".se = ", "(", i, ".sd)", "/(sqrt(sample.size - 1))", ",",sep = "")
}
mutated.cut <- substr(mutated, 1, nchar(mutated)-1)
mutated.final <- eval(rlang::parse_expr(paste(mutated.cut, ")", sep = "")))
mutated.final
grouped.final
grouped <- paste("dplyr::group_by(", df.name, ",", sep = "")
for(i in group){
grouped <- paste(grouped, i, ",", sep = "")
grouped.cut <- substr(grouped, 1, nchar(grouped)-1)
grouped.final <- eval(rlang::parse_expr(paste(grouped.cut, ")")))
}
summarised <- paste("dplyr::summarise(", "grouped.final", ",", "sample.size = dplyr::n(),", sep = "")
for(i in columns){
summarised <- paste(summarised, i, ".avg = mean(", i, ", na.rm = T)", ",",
i, ".sd = sd(", i, ", na.rm = T)", ",", sep = "")
}
summarised.cut <- substr(summarised, 1, nchar(summarised)-1)
summarised.final <- eval(rlang::parse_expr(paste(summarised.cut, ")")))
mutated <- paste("dplyr::mutate(", "summarised.final", ",", sep = "")
for(i in columns){
mutated <- paste(mutated, i, ".se = ", "(", i, ".sd)", "/(sqrt(sample.size - 1))", ",",sep = "")
}
mutated.cut <- substr(mutated, 1, nchar(mutated)-1)
mutated.final <- eval(rlang::parse_expr(paste(mutated.cut, ")", sep = "")))
mutated.final
library(apbotutils)
library("devtools")
use_data("Constants")
library(phenopix)
extractVIs
library(apbotutils)
mean.tbl
mean.tbl()
library(apbotutils)
mean,tbl
library(apbotutils)
> a <- c(1,2,3,4,5,6)
> b <- c(3,5,7,4,8,9)
> c <- c("a", "b", "a", "a", "b", "b")
> d <- data.frame(a,b,c)
a <- c(1,2,3,4,5,6)
b <- c(3,5,7,4,8,9)
c <- c("a", "b", "a", "a", "b", "b")
d <- data.frame(a,b,c)
d
f <- avg.tbl("d", "c", c("a", "b"))
f
library(apbotutils)
f <- avg.tbl("d", "c", c("a", "b"))
f
library(dplyr)
?avg.tbl
library(apbotutils)
f <- summarised.tbl("d", "c", c("a", "b"))
f
?summarised.tbl
library(apbotutils)
a <- c(1,2,3,4,5)
b <- c(1,4,9,16,25)
model.choose(a,b, "LL2.3")
model.choose(a,b, "LL2.3()")
model.choose(a,b, "LL2.3")
model.choose(a,b, "LL.2")
library(drc)
eval(call("LL.3"))
c <- eval(call("LL.3"))
c
starters <- c("LL.2",
"LL.3",
"LL.3u",
"LL.4",
"LL.5",
"W1.2",
"W1.3",
"W1.4",
"W2.2",
"W2.3",
"W2.4",
"BC.4",
"BC.5",
"LL2.2",
"LL2.3",
"LL2.3u",
"LL2.4",
"LL2.5",
"AR.2",
"AR.3",
"MM.2",
"MM.3"
)
call(starters[[1]])
eval(call(starters[[1]]))
library(drc)
eval(call(starters[[1]]))
call(starters[[1]])
eval(call(paste("drc::", starters[[1]], sep = "")))
drc::LL.2()
eval(call(starters[[1]], sep = ""))
eval(call(starters[[1]]))
eval(drc::drm())
drc::LL.2
paste("drc::",starters[i])
paste("drc::",starters[1])
paste("drc::",starters[1], sep = "")
d <- paste("drc::",starters[1], sep = "")
d
call(d)
call("LL.2")
call("base::mean")
?call
eval(call("mean(c(1,2,3"))
eval(call("mean(c(1,2,3"))))
eval(call("mean(c(1,2,3")))
eval(call("mean(c(1,2,3"))))
eval(call("mean(c(1,2,3))"))
eval(call("mean(1,2,3)"))
eval("mean(1,2,3)")
eval(mean(1,2,3))
mean(1,2,3)
eval(mean(c(1,2,3)))
cement("blep")
library(apbotutils)
cement("blep")
cement(blep)
unquote(blep)
unquote("blep")
library(rlang)
rlang::parse_expr(base::mean())
rlang::parse_expr(base::mean(c(1,2,3)))
rlang::parse_expr("base::mean(c(1,2,3))")
eval(rlang::parse_expr("base::mean(c(1,2,3))"))
starters
i=1
paste("drc::drm(y ~ x, fct = drc::", starters[i], sep = ""))
paste("drc::drm(y ~ x, fct = drc::", starters[i], sep = "")
?eval
x <- c(1,2,3,4,5)
y <- c(1,4,9,16,25)
res <- c()
labels <- c()
rm(model)
try(model <- eval(rlang::parse_expr(paste("drc::drm(y ~ x, fct = drc::", starters[i], "()", sep = ""))))
try(model <- eval(rlang::parse_expr(paste("drc::drm(y ~ x, fct = drc::", starters[i], "()))", sep = ""))))
try(model <- eval(rlang::parse_expr(paste("drc::drm(y ~ x, fct = drc::", starters[i], "())", sep = ""))))
if(exists("model") == T){
AICc.model <-  MuMIn::AICc(model)
res <- c(res, AICc.model)
labels <- c(labels, starters[i])
}else{
res <- c(res,NA)
labels <- c(labels, starters[i])
}
for(i in 1:length(starters)){
rm(model)
try(model <- eval(rlang::parse_expr(paste("drc::drm(y ~ x, fct = drc::", starters[i], "())", sep = ""))))
if(exists("model") == T){
AICc.model <-  MuMIn::AICc(model)
res <- c(res, AICc.model)
labels <- c(labels, starters[i])
}else{
res <- c(res,NA)
labels <- c(labels, starters[i])
}
}
res.df <- data.frame(labels, res)
res.df
library(apbotutils)
library(devtools)
